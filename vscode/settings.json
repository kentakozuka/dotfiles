// Place your settings in this file to overwrite the default settings
{
  "files.exclude": {
    "**/.git": false,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  "workbench.editor.enablePreview": false,
  "explorer.confirmDelete": false,
  // ----------------------------------
  // Editor
  // ----------------------------------
  "editor.tabSize": 8,
  "editor.lineNumbers": "on",
  "editor.cursorStyle": "line",
  "editor.insertSpaces": false,
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "editor.inlineSuggest.enabled": true,
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": true
  },
  "editor.renderWhitespace": "boundary",
  "editor.cursorBlinking": "solid",
  "editor.minimap.enabled": false,
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "vim.easymotion": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "vspacecode.space"
      ]
    }
  ],
  "vim.hlsearch": true,
  "vim.useSystemClipboard": true,
  "vim.visualstar": true,
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<C-f>"
      ],
      "after": [
        "<Right>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "\\"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "vspacecode.space"
      ]
    }
  ],
  "vim.handleKeys": {
    "<C-d>": true
  },
  "prettier.requireConfig": true,
  "breadcrumbs.enabled": true,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "terminal.integrated.macOptionIsMeta": true,
  "git.autofetch": true,
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false,
  },
  // Go
  "go.goroot": "~/.gvm/gos/go1.15.7",
  "go.toolsManagement.autoUpdate": true,
  "go.lintTool": "golangci-lint",
  "go.autocompleteUnimportedPackages": true,
  "[go]": {
    "editor.snippetSuggestions": "none",
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.organizeImports": false
    },
  },
  "gopls": {
    // Add parameter placeholders when completing a function.
    "usePlaceholders": true,
    "completeUnimported": true
  },
  "go.useLanguageServer": false,
  "go.languageServerFlags": [
    "-rpc.trace"
  ],
  "go.formatTool": "goimports",
  // Python
  "[python]": {
    "editor.tabSize": 4,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "editor.insertSpaces": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    }
  },
  "python.defaultInterpreterPath": "${workspaceFolder}/python/.venv/bin/python",
  "python.sortImports.path": "${workspaceRoot}/ui/io/venv/bin/isort",
  "python.insidersChannel": "weekly",
  // toml
  "[toml]": {
    "editor.formatOnSave": false,
  },
  // JS
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  // Flutter
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": false,
  },
  // Java
  "java.semanticHighlighting.enabled": true,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.sortJSON": false
    },
  },
  "[proto3]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[cpp]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "xaver.clang-format",
    "editor.quickSuggestions": true,
    "editor.suggestOnTriggerCharacters": true,
    "editor.acceptSuggestionOnEnter": "off"
  },
  "C_Cpp.codeFolding": "Disabled",
  "C_Cpp.default.cppStandard": "c++17",
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": false,
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "C_Cpp.updateChannel": "Insiders",
  "mssql.connections": [
    {
      "server": "{{put-server-name-here}}",
      "database": "{{put-database-name-here}}",
      "user": "{{put-username-here}}",
      "password": "{{put-password-here}}"
    }
  ],
  "diffEditor.ignoreTrimWhitespace": false,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "explorer.confirmDragAndDrop": false,
  "dart.previewFlutterUiGuides": true,
  "window.zoomLevel": -1,
}